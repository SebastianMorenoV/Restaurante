/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.ModuloReportes;

import DTOSalida.ComandaDTO;
import GUI.Aplicacion;
import exception.NegocioException;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sebastian Moreno
 */
public class PantallaReporteComandas extends javax.swing.JPanel {

    /**
     * Creates new form PantallaReporteComandas
     */
    Aplicacion app;

    public PantallaReporteComandas(Aplicacion app) {
        this.app = app;
        initComponents();
        configurarCalendarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlHeader = new javax.swing.JPanel();
        txtTitulo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTitulo1 = new javax.swing.JLabel();
        linea = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReporteComandas = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        pnlBtnImprimirReporte = new GUI.PanelRound();
        btnImprimirReporte = new javax.swing.JLabel();
        calendario2 = new com.toedter.calendar.JCalendar();
        calendario1 = new com.toedter.calendar.JCalendar();

        setBackground(new java.awt.Color(216, 202, 179));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlHeader.setBackground(new java.awt.Color(255, 255, 255));
        pnlHeader.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTitulo.setBackground(new java.awt.Color(0, 0, 0));
        txtTitulo.setFont(new java.awt.Font("Playfair Display", 1, 100)); // NOI18N
        txtTitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtTitulo.setText("Comandas");
        txtTitulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlHeader.add(txtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 60, 540, 120));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/flechaAtras.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        pnlHeader.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtTitulo1.setBackground(new java.awt.Color(0, 0, 0));
        txtTitulo1.setFont(new java.awt.Font("Playfair Display", 1, 100)); // NOI18N
        txtTitulo1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtTitulo1.setText("Reporte de");
        txtTitulo1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlHeader.add(txtTitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, -20, 540, 120));

        add(pnlHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 180));

        linea.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout lineaLayout = new javax.swing.GroupLayout(linea);
        linea.setLayout(lineaLayout);
        lineaLayout.setHorizontalGroup(
            lineaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        lineaLayout.setVerticalGroup(
            lineaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        add(linea, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 1150, 4));

        tablaReporteComandas.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tablaReporteComandas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Estado", "Monto Venta", "No.Mesa", "Detalle", "Fecja de Atencion"
            }
        ));
        tablaReporteComandas.setRowHeight(30);
        jScrollPane1.setViewportView(tablaReporteComandas);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, 750, 310));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel5.setText("Fecha limite:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 410, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel6.setText("Selecciona los parametros para buscar");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, -1, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel8.setText("Fecha inicio:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        pnlBtnImprimirReporte.setBackground(new java.awt.Color(255, 255, 255));
        pnlBtnImprimirReporte.setRoundBottomLeft(30);
        pnlBtnImprimirReporte.setRoundBottomRight(30);
        pnlBtnImprimirReporte.setRoundTopLeft(30);
        pnlBtnImprimirReporte.setRoundTopRight(30);
        pnlBtnImprimirReporte.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnImprimirReporte.setFont(new java.awt.Font("Product Sans Infanity", 0, 28)); // NOI18N
        btnImprimirReporte.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnImprimirReporte.setText("Imprimir Reporte");
        btnImprimirReporte.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImprimirReporte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImprimirReporteMouseClicked(evt);
            }
        });
        pnlBtnImprimirReporte.add(btnImprimirReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 300, 50));

        add(pnlBtnImprimirReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 580, 320, 50));

        calendario2.setBackground(new java.awt.Color(216, 202, 179));
        add(calendario2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 280, 180));

        calendario1.setBackground(new java.awt.Color(216, 202, 179));
        add(calendario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 280, 180));
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        app.mostrarMenuReportes();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void btnImprimirReporteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirReporteMouseClicked
        
    }//GEN-LAST:event_btnImprimirReporteMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnImprimirReporte;
    private com.toedter.calendar.JCalendar calendario1;
    private com.toedter.calendar.JCalendar calendario2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel linea;
    private GUI.PanelRound pnlBtnImprimirReporte;
    private javax.swing.JPanel pnlHeader;
    private javax.swing.JTable tablaReporteComandas;
    private javax.swing.JLabel txtTitulo;
    private javax.swing.JLabel txtTitulo1;
    // End of variables declaration//GEN-END:variables

    private void realizarBusqueda() {
        Date fechaInicioDate = calendario1.getDate();
        Date fechaFinDate = calendario2.getDate();

        if (fechaInicioDate == null || fechaFinDate == null) {
            JOptionPane.showMessageDialog(this, "Selecciona ambas fechas para realizar la b√∫squeda.");
            return;
        }

        // Convertir Date a LocalDateTime
        LocalDateTime fechaInicio = fechaInicioDate.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate()
                .atStartOfDay();

        LocalDateTime fechaFin = fechaFinDate.toInstant()
                .atZone(ZoneId.systemDefault())
                .toLocalDate()
                .atTime(LocalTime.MAX); // hasta las 23:59:59

        try {
            List<ComandaDTO> comandas = app.buscarComandasPorFechas(fechaInicio, fechaFin);
            llenarTablaComandas(comandas);
        } catch (NegocioException ex) {
            //Logger.getLogger(PantallaConsultarComandas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error al buscar comandas: " + ex.getMessage());
        }
    }
    
    private void configurarCalendarios() {
        calendario1.addPropertyChangeListener(evt -> realizarBusqueda());
        calendario2.addPropertyChangeListener(evt -> realizarBusqueda());
    }
    
    private void llenarTablaComandas(List<ComandaDTO> comandas) throws NegocioException {
        DefaultTableModel model = (DefaultTableModel) tablaReporteComandas.getModel();
        model.setRowCount(0); // Limpiar

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");

        for (ComandaDTO comanda : comandas) {
            String detalle = app.obtenerDetallesComandaPorFolio(comanda.getFolio());
            //String nombreCliente = (comanda.getIdCliente() != null) ? comanda.getIdCliente().getNombre() : "Cliente no asignado";
            //System.out.println("Detalle para la comanda " + comanda.getFolio() + ": " + detalle);
            String nombreCliente = comanda.getCliente().getNombreCompleto();

            model.addRow(new Object[]{
                nombreCliente, // como saco el piunche cliente alv
                comanda.getEstado(),
                comanda.getTotalVenta(),
                comanda.getNumeroMesa(),
                detalle,//Aqui es el comentario de los detalles comanda
                comanda.getFechaHora()
            });
        }
    }



}

