/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI.ModuloReportes;

import DTOSalida.ClienteDTO;
import GUI.Aplicacion;
import GUI.ModuloClientesFrecuentes.PantallaConsultarClientes;
import exception.NegocioException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sebastian Moreno
 */
public class PantallaReporteClientes extends javax.swing.JPanel {

    /**
     * Creates new form PantallaReporteClientes
     */
    Aplicacion app;

    public PantallaReporteClientes(Aplicacion app) {
        this.app = app;
        initComponents();

        agregarDocumentListener(inputNombre);
        agregarDocumentListener(inputVisitasMinimas);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBtnImprimirReporte = new GUI.PanelRound();
        btnImprimirReporte = new javax.swing.JLabel();
        linea = new javax.swing.JPanel();
        pnlHeader = new javax.swing.JPanel();
        txtTitulo = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtTitulo1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReporteClientes = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        pnlNombre = new GUI.PanelRound();
        inputNombre = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        pnlApellidoPaterno = new GUI.PanelRound();
        inputVisitasMinimas = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(216, 202, 179));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlBtnImprimirReporte.setBackground(new java.awt.Color(255, 255, 255));
        pnlBtnImprimirReporte.setRoundBottomLeft(30);
        pnlBtnImprimirReporte.setRoundBottomRight(30);
        pnlBtnImprimirReporte.setRoundTopLeft(30);
        pnlBtnImprimirReporte.setRoundTopRight(30);
        pnlBtnImprimirReporte.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnImprimirReporte.setFont(new java.awt.Font("Product Sans Infanity", 0, 28)); // NOI18N
        btnImprimirReporte.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnImprimirReporte.setText("Imprimir Reporte");
        btnImprimirReporte.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImprimirReporte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImprimirReporteMouseClicked(evt);
            }
        });
        pnlBtnImprimirReporte.add(btnImprimirReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 300, 50));

        add(pnlBtnImprimirReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 530, 320, 50));

        linea.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout lineaLayout = new javax.swing.GroupLayout(linea);
        linea.setLayout(lineaLayout);
        lineaLayout.setHorizontalGroup(
            lineaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        lineaLayout.setVerticalGroup(
            lineaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        add(linea, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 1150, 4));

        pnlHeader.setBackground(new java.awt.Color(255, 255, 255));
        pnlHeader.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTitulo.setBackground(new java.awt.Color(0, 0, 0));
        txtTitulo.setFont(new java.awt.Font("Playfair Display", 1, 100)); // NOI18N
        txtTitulo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtTitulo.setText("Clientes Frecuentes");
        txtTitulo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlHeader.add(txtTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 970, 120));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/flechaAtras.png"))); // NOI18N
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        pnlHeader.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtTitulo1.setBackground(new java.awt.Color(0, 0, 0));
        txtTitulo1.setFont(new java.awt.Font("Playfair Display", 1, 100)); // NOI18N
        txtTitulo1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        txtTitulo1.setText("Reporte de");
        txtTitulo1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pnlHeader.add(txtTitulo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, -20, 540, 120));

        add(pnlHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, 180));

        tablaReporteClientes.setBackground(new java.awt.Color(255, 255, 255));
        tablaReporteClientes.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        tablaReporteClientes.setForeground(new java.awt.Color(0, 0, 0));
        tablaReporteClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "No. visitas", "Total Gastado", "Puntos de Fidelidad", "Fecha de ultima comanda"
            }
        ));
        tablaReporteClientes.setRowHeight(30);
        jScrollPane1.setViewportView(tablaReporteClientes);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 210, 740, 310));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel5.setText("BUSCAR POR :");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 210, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/flecha.png"))); // NOI18N
        add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 80, 20));

        pnlNombre.setBackground(new java.awt.Color(255, 255, 255));
        pnlNombre.setRoundBottomLeft(30);
        pnlNombre.setRoundBottomRight(30);
        pnlNombre.setRoundTopLeft(30);
        pnlNombre.setRoundTopRight(30);
        pnlNombre.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inputNombre.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        inputNombre.setForeground(new java.awt.Color(0, 0, 0));
        inputNombre.setText("Ingresar nombre completo");
        inputNombre.setBorder(null);
        inputNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputNombreFocusGained(evt);
            }
        });
        inputNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNombreActionPerformed(evt);
            }
        });
        pnlNombre.add(inputNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 250, 30));

        add(pnlNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 300, 50));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/flecha.png"))); // NOI18N
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 80, 20));

        pnlApellidoPaterno.setBackground(new java.awt.Color(255, 255, 255));
        pnlApellidoPaterno.setRoundBottomLeft(30);
        pnlApellidoPaterno.setRoundBottomRight(30);
        pnlApellidoPaterno.setRoundTopLeft(30);
        pnlApellidoPaterno.setRoundTopRight(30);
        pnlApellidoPaterno.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        inputVisitasMinimas.setFont(new java.awt.Font("Roboto", 0, 15)); // NOI18N
        inputVisitasMinimas.setForeground(new java.awt.Color(0, 0, 0));
        inputVisitasMinimas.setText("Visitas Minimas");
        inputVisitasMinimas.setBorder(null);
        inputVisitasMinimas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                inputVisitasMinimasFocusGained(evt);
            }
        });
        inputVisitasMinimas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputVisitasMinimasActionPerformed(evt);
            }
        });
        pnlApellidoPaterno.add(inputVisitasMinimas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 250, 30));

        add(pnlApellidoPaterno, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 300, 50));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel4.setText("NUMERO VISITAS");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, 250, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel6.setText("NOMBRE COMPLETO");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 300, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        app.mostrarMenuReportes();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void btnImprimirReporteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirReporteMouseClicked

    }//GEN-LAST:event_btnImprimirReporteMouseClicked

    private void inputNombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputNombreFocusGained
        if (inputNombre.getText().equals("Ingresar nombre completo")) {
            inputNombre.setText("");
        }
    }//GEN-LAST:event_inputNombreFocusGained

    private void inputVisitasMinimasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_inputVisitasMinimasFocusGained
        if (inputVisitasMinimas.getText().equals("Visitas Minimas")) {
            inputVisitasMinimas.setText("");
        }
    }//GEN-LAST:event_inputVisitasMinimasFocusGained

    private void inputNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNombreActionPerformed

    private void inputVisitasMinimasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputVisitasMinimasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputVisitasMinimasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnImprimirReporte;
    private javax.swing.JTextField inputNombre;
    private javax.swing.JTextField inputVisitasMinimas;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel linea;
    private GUI.PanelRound pnlApellidoPaterno;
    private GUI.PanelRound pnlBtnImprimirReporte;
    private javax.swing.JPanel pnlHeader;
    private GUI.PanelRound pnlNombre;
    private javax.swing.JTable tablaReporteClientes;
    private javax.swing.JLabel txtTitulo;
    private javax.swing.JLabel txtTitulo1;
    // End of variables declaration//GEN-END:variables

    // Método para agregar DocumentListener a los JTextFields
    private void agregarDocumentListener(JTextField textField) {
        textField.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                realizarBusqueda();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                realizarBusqueda();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                realizarBusqueda();
            }
        });
    }

    // Método para realizar la búsqueda en el clienteBO
    private void realizarBusqueda() {
        // Construir el nombre completo a partir de los campos de entrada
        StringBuilder nombreCompleto = new StringBuilder(inputNombre.getText().trim());
        String visitasMinimas = "0";
        if (!inputVisitasMinimas.getText().trim().isEmpty()) {
            visitasMinimas = inputVisitasMinimas.getText().trim();
        }
        if (visitasMinimas.equals("Visitas Minimas")) {
            visitasMinimas = "0";
        }
        // Crear el objeto ClienteDTO con el nombre completo
        ClienteDTO clienteFiltro = new ClienteDTO();
        clienteFiltro.setNombreCompleto(nombreCompleto.toString().trim()); // Evitar espacios extra
        clienteFiltro.setVisitasTotales(Integer.parseInt(visitasMinimas));

        // Realizar la búsqueda en el BO
        List<ClienteDTO> clientesEncontrados = null;
        try {
            clientesEncontrados = app.buscarClienteReporte(clienteFiltro);

        } catch (NegocioException ex) {
            Logger.getLogger(PantallaConsultarClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        // Actualizar la tabla con los resultados
        actualizarTabla(clientesEncontrados);
    }

    // Método para actualizar la tabla con los resultados de búsqueda
    private void actualizarTabla(List<ClienteDTO> clientes) {
        DefaultTableModel model = (DefaultTableModel) tablaReporteClientes.getModel();
        model.setRowCount(0); // Limpiar tabla existente

        // Llenar la tabla con los resultados
        for (ClienteDTO cliente : clientes) {
            model.addRow(new Object[]{cliente.getNombreCompleto(), cliente.getVisitasTotales(), cliente.getTotalGastado(), cliente.getPuntos()});
        }
    }
}
